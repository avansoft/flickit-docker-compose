version: '3.9'

services:

  backend:
    image: ghcr.io/avansoft/flickit-platform:latest
    ports:
      - 8000:8000
    volumes:
      - static-data:/vol/web
    environment:
      - ASSESSMENT_SERVER_PORT=${ASSESSMENT_SERVER_PORT}
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - EMAIL_HOST=${EMAIL_HOST}
      - DEFAULT_FROM_EMAIL=${DEFAULT_FROM_EMAIL}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - EMAIL_HOST_PORT=${EMAIL_HOST_PORT}
      - EMAIL_USE_TLS=${EMAIL_USE_TLS}
      - EMAIL_USE_SSL=${EMAIL_USE_SSL}
      - DOMAIN=${DOMAIN}
      - CELERY_BROKER_URL=redis://redis:6379/1
      - MINIO_ACCESS_KEY_ID=${MINIO_USER}
      - MINIO_SECRET_ACCESS_KEY=${MINIO_PASSWORD}
      - MINIO_URL=http://localhost:9000
      - MINIO_API=http://minio:9000
      - MINIO_USE_SSL=${MINIO_USE_SSL}
      - MINIO_MEDIA_BUCKET=${MINIO_MEDIA_BUCKET}
      - MINIO_STATIC_BUCKET=${MINIO_STATIC_BUCKET}
      - MINIO_QUERYSTRING_EXPIRE_MEDIA=${MINIO_QUERYSTRING_EXPIRE_MEDIA}

    depends_on:
      - minio
      - createbucket
      - db
      - assessment



  assessment:
    image: ghcr.io/avansoft/flickit-assessment-core:latest
    environment:
      - SERVER_PORT=${ASSESSMENT_SERVER_PORT}
      - SERVER_SERVLET_CONTEXT-PATH=/assessment-core/api/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db_core:5432/${ASSESSMENT_DB_NAME}  
      - SPRING_DATASOURCE_USERNAME=${ASSESSMENT_DB_USER}
      - SPRING_DATASOURCE_PASSWORD=${ASSESSMENT_DB_PASS}
      - MANAGEMENT_ENDPOINT_HEALTH_SHOW-DETAILS=always
      - APP_FLICKIT-PLATFORM_REST_BASE-URL=http://backend:8000
    ports:
      - 8098:${ASSESSMENT_SERVER_PORT}
    depends_on:
      - assessment_db


  assessment_db:
    image: postgres:11
    hostname: db_core
    restart: always
    environment:
      - POSTGRES_DB=${ASSESSMENT_DB_NAME}
      - POSTGRES_USER=${ASSESSMENT_DB_USER}
      - POSTGRES_PASSWORD=${ASSESSMENT_DB_PASS}
    volumes:
      - assessment-db-data:/var/lib/postgresql/data
    ports:
      - 5433:5432
  dsl:
    image: ghcr.io/avansoft/flickit-dsl-parser:latest
    restart: on-failure
    ports:
      - 8080:8080
    volumes:
      - dsl-parser-data:/opt/dsl-parser

  db:
    image: postgres:11
    restart: always
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - 5432:5432

  redis:
    image: redis:alpine
  celery:
    restart: always
    image: ghcr.io/avansoft/flickit-platform:stage
    command: celery -A assessmentplatform worker -l info
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - EMAIL_HOST=${EMAIL_HOST}
      - DEFAULT_FROM_EMAIL=${DEFAULT_FROM_EMAIL}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - EMAIL_HOST_PORT=${EMAIL_HOST_PORT}
      - EMAIL_USE_TLS=${EMAIL_USE_TLS}
      - EMAIL_USE_SSL=${EMAIL_USE_SSL}
      - DOMAIN=${DOMAIN}
      - CELERY_BROKER_URL=redis://redis:6379/1
    depends_on:
      - db
      - redis
      - backend

  flower:
    image: ghcr.io/avansoft/flickit-platform:stage
    command: celery -A assessmentplatform flower
    depends_on:
      - backend
      - redis
      - celery
    environment:
      - DEBUG=${DEBUG}
      - CELERY_BROKER=redis://redis:6379/1
      - CELERY_BACKEND=redis://redis:6379/1
      - SECRET_KEY=${SECRET_KEY}
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - DOMAIN=${DOMAIN}
    ports:
      - 5555:5555

  frontend:
    image: ghcr.io/avansoft/flickit-platform-frontend:latest
    ports:
      - "3000:80"
    environment:
      - BASE_URL=http://backend:8000
    stdin_open: true
    depends_on:
      - backend

  nginx:
    image: nginx:latest
    ports:
      - 80:80
    volumes:
      - ./nginx-config/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend
      - frontend

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_storage:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_PASSWORD}
    command: server --console-address ":9001" /data

  createbucket:
    image: minio/mc:latest
    restart: on-failure
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add --api s3v4 s3 http://minio:9000 $MINIO_USER  $MINIO_PASSWORD;
      /usr/bin/mc mb s3/$MINIO_STATIC_BUCKET/;
      /usr/bin/mc mb s3/$MINIO_MEDIA_BUCKET/;
      /usr/bin/mc anonymous set download s3/$MINIO_STATIC_BUCKET;
      "


volumes:
  postgres-data:
  static-data:
  dsl-parser-data:
  assessment-db-data:
  minio_storage: 